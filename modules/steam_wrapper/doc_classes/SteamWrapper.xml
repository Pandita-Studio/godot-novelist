<class name="SteamWrapper" inherits="Object" version="0.1">
	<brief_description>
		Dynamic Steam API wrapper for Godot.
	</brief_description>
	<description>
		This module dynamically loads and wraps the Steam API and creates a singleton to interact with it.
	</description>
	<tutorials>
    </tutorials>
	<methods>
		<method name="get_app_id">
			<return type="int">
			</return>
			<description>
				Returns the current app ID.
			</description>
		</method>
		<method name="is_steam_initialized">
			<return type="bool">
			</return>
			<description>
				True if Steam is initialized, false otherwise.
			</description>
		</method>
		<method name="get_steam_wrapper_version">
			<return type="String">
			</return>
			<description>
				Returns the version of the Steam wrapper.
			</description>
		</method>
		<method name="get_steam_api_version">
			<return type="String">
			</return>
			<description>
				Returns the version of the current supported Steam API.
			</description>
		</method>
		<method name="get_user_steam_id">
			<return type="int">
			</return>
			<description>
				Returns the current user's Steam ID.
			</description>
		</method>
		<method name="get_achievement">
			<return type="bool">
			</return>
			<description>
				Returns `True` if the achievement with the given name is unlocked, `False` otherwise.
			</description>
		</method>
		<method name="set_achievement">
			<return type="void">
			</return>
			<description>
				Unlocks the achievement with the given name.
			</description>
		</method>
		<method name="clear_achievement">
			<return type="void">
			</return>
			<description>
				Clears the unlocked state of the achievement with the given name. This should only be used for testing purposes.
			</description>
		</method>
		<method name="run_callbacks">
			<return type="int">
			</return>
			<description>
				Must be called every frame to process Steam callbacks. You can call this in the `_physics_process` method of your main scene or in a singleton.
			</description>
		</method>
    </methods>
	<signals>
		<signal name="game_overlay_toggled">
			<param index="0" name="active" type="bool" />
			<description>
				Emitted when Steam overlay is toggled.
			</description>
		</signal>
	</signals>
</class>
